# Generated by Django 2.1.5 on 2019-12-16 14:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('transductor', '0001_initial'),
        ('measurement', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CriticalVoltageEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.Event')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_criticalvoltageevent', to='measurement.MinutelyMeasurement')),
            ],
            bases=('events.event',),
        ),
        migrations.CreateModel(
            name='FailedConnectionEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.Event')),
                ('transductor_ip', models.CharField(default='0.0.0.0', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_ip_address', message='Incorrect IP address format', regex='^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$')])),
                ('transductor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_failedconnectionevent', to='transductor.EnergyTransductor')),
            ],
            bases=('events.event',),
        ),
        migrations.CreateModel(
            name='MaximumConsumptionReachedEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.Event')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_maximumconsumptionreachedevent', to='measurement.QuarterlyMeasurement')),
            ],
            bases=('events.event',),
        ),
        migrations.CreateModel(
            name='PhaseDropEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.Event')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_phasedropevent', to='measurement.MinutelyMeasurement')),
            ],
            bases=('events.event',),
        ),
        migrations.CreateModel(
            name='PrecariousVoltageEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.Event')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_precariousvoltageevent', to='measurement.MinutelyMeasurement')),
            ],
            bases=('events.event',),
        ),
    ]
