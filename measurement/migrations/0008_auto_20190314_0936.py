# Generated by Django 2.1.5 on 2019-03-14 12:36

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('transductor', '0003_auto_20190204_1403'),
        ('measurement', '0007_auto_20190311_1717'),
    ]

    operations = [
        migrations.CreateModel(
            name='EnergyMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('frequency_a', models.FloatField(default=0)),
                ('voltage_a', models.FloatField(default=0)),
                ('voltage_b', models.FloatField(default=0)),
                ('voltage_c', models.FloatField(default=0)),
                ('current_a', models.FloatField(default=0)),
                ('current_b', models.FloatField(default=0)),
                ('current_c', models.FloatField(default=0)),
                ('active_power_a', models.FloatField(default=0)),
                ('active_power_b', models.FloatField(default=0)),
                ('active_power_c', models.FloatField(default=0)),
                ('total_active_power', models.FloatField(default=0)),
                ('reactive_power_a', models.FloatField(default=0)),
                ('reactive_power_b', models.FloatField(default=0)),
                ('reactive_power_c', models.FloatField(default=0)),
                ('total_reactive_power', models.FloatField(default=0)),
                ('apparent_power_a', models.FloatField(default=0)),
                ('apparent_power_b', models.FloatField(default=0)),
                ('apparent_power_c', models.FloatField(default=0)),
                ('total_apparent_power', models.FloatField(default=0)),
                ('power_factor_a', models.FloatField(default=0)),
                ('power_factor_b', models.FloatField(default=0)),
                ('power_factor_c', models.FloatField(default=0)),
                ('total_power_factor', models.FloatField(default=0)),
                ('dht_voltage_a', models.FloatField(default=0)),
                ('dht_voltage_b', models.FloatField(default=0)),
                ('dht_voltage_c', models.FloatField(default=0)),
                ('dht_current_a', models.FloatField(default=0)),
                ('dht_current_b', models.FloatField(default=0)),
                ('dht_current_c', models.FloatField(default=0)),
                ('consumption_a', models.FloatField(default=0)),
                ('consumption_b', models.FloatField(default=0)),
                ('consumption_c', models.FloatField(default=0)),
                ('total_consumption', models.FloatField(default=0)),
                ('transductor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='transductor.EnergyTransductor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='minutelymeasurement',
            name='transductor',
        ),
        migrations.RemoveField(
            model_name='monthlymeasurement',
            name='transductor',
        ),
        migrations.RemoveField(
            model_name='quarterlymeasurement',
            name='transductor',
        ),
        migrations.DeleteModel(
            name='MinutelyMeasurement',
        ),
        migrations.DeleteModel(
            name='MonthlyMeasurement',
        ),
        migrations.DeleteModel(
            name='QuarterlyMeasurement',
        ),
    ]
